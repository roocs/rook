[build-system]
requires = ["flit_core >=3.9,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "birdhouse-rook"
authors = [
  {name = "Carsten Ehbrecht", email = "ehbrecht@dkrz.de"}
]
maintainers = [
  {name = "Carsten Ehbrecht", email = "ehbrecht@dkrz.de"},
  {name = "Trevor James Smith", email = "smith.trevorj@ouranos.ca"},
]
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.9.0"
keywords = ["wps", "pywps", "birdhouse", "rook"]
license = {file = "LICENSE"}
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: POSIX",
  "Programming Language :: Python",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Atmospheric Science"
]
dynamic = ["description", "version"]
dependencies = [
  "click >=8.1.7",
  "jinja2 >=3.1.4",
  "psutil >=6.0.0",
  "pywps >=4.5.2,<4.7",
  "daops >=0.11.0,<0.12.0",
  "clisops >=0.14.0",
  "roocs-utils >=0.6.9,<0.7.0",
  "roocs_grids >=0.1.2",
  "xarray >=0.21,<2023.3.0", # https://github.com/pydata/xarray/issues/7794
  "cf-xarray >=0.7",
  "cftime>=1.2.1",
  "dask[complete] >=2021.12",
  "netcdf4>=1.4",
  # workflow
  "networkx",
  # provenance
  "prov >=2.0.0",
  "pydot",
  # catalog
  "intake",
  "pandas <=1.5.3",  # limited by daops and sqlalchemy
  "SQLAlchemy >=1.4.45,<2.0",
  "aiohttp",
  # dashboard
  "bokeh",
  "humanize"
]

[project.optional-dependencies]
dev = [
  "pip >=24.2.0",
  "beautifulsoup4",
  "black >=24.10.0",
  "bump-my-version >=0.26.0",
  "coverage >=7.5.0",
  "cruft >=2.15.0",
  "flit >=3.9.0,<4.0",
  "ipython>=8.13.0",
  "nbconvert >=7.10.0",
  "nbsphinx >=0.9.5",
  "nbval >=0.10.0",
  "pre-commit >=3.5.0",
  "pytest >=8.0.0",
  "pytest-cov >=5.0.0",
  "ruff >=0.5.7",
  "sphinx >=7.0.0",
  "tox >=4.18.0",
  "twine >=4.0.0",
  "watchdog >=4.0.0",
  "wheel >=0.40.0"
]

[project.scripts]
rook = "rook.cli:cli"

[project.urls]
"Issue tracker" = "https://github.com/roocs/rook/issues"
"Changelog" = "https://github.com/roocs/rook/blob/master/changelog.rst"
"Homepage" = "https://github.com/roocs/rook"

[tool]

[tool.black]
target-version = [
  "py39",
  "py310",
  "py311",
  "py312"
]


[tool.bumpversion]
current_version = "0.14.0"
commit = true
commit_args = "--no-verify"
tag = true
tag_name = "v{new_version}"
allow_dirty = true

[[tool.bumpversion.files]]
filename = "src/rook/__version__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "Dockerfile"
search = "Version=\"{current_version}\""
replace = "Version=\"{new_version}\""

[[tool.bumpversion.files]]
filename = ".cruft.json"
search = "\"version\": \"{current_version}\""
replace = "\"version\": \"{new_version}\""

[tool.coverage.paths]
source = ["src/rook/", "*/site-packages/rook/"]

[tool.coverage.run]
omit = ["tests/*.py"]
relative_files = true
source = ["rook"]

[tool.flit.module]
name = "rook"

[tool.flit.sdist]
include = [
  ".zenodo.json",
  "AUTHORS.rst",
  "CHANGELOG.rst",
  "CONTRIBUTING.rst",
  "LICENSE",
  "Makefile",
  "README.rst",
  "environment.yml",
  "environment-dev.yml",
  "environment-docs.yml",
  "docs/_static/_images/*.gif",
  "docs/_static/_images/*.jpg",
  "docs/_static/_images/*.png",
  "docs/_static/_images/*.rst",
  "docs/Makefile",
  "docs/conf.py",
  "docs/make.bat",
  "src/rook",
  "tests/*.py",
  "tox.ini"
]
exclude = [
  "*.py[co]",
  "__pycache__",
  ".codacy.yml",
  ".dockerignore",
  ".editorconfig",
  ".gitignore",
  ".pre-commit-config.yaml",
  ".readthedocs.yml",
  ".yamllint.yaml",
  "Dockerfile",
  "docker-compose.yml",
  "docs/_*",
  "docs/apidoc/modules.rst",
  "docs/apidoc/rook*.rst"
]

[tool.mypy]
files = "."
# Use strict defaults
strict = true
warn_unreachable = true
warn_no_return = true

[[tool.mypy.overrides]]
# Don't require test functions to include types
module = "tests.*"
allow_untyped_defs = true
disable_error_code = "attr-defined"

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--cov=rook",
  "--cov-report=term-missing",
  "--ignore=setup.py",
  "--strict-markers",
  "--tb=native"
]
python_files = ["test_*.py"]
markers = [
  "online: mark test to need internet connection",
  "smoke: mark test as a smoke/sanity test"
]

[tool.ruff]
src = ["rook"]
line-length = 150
exclude = [
  ".eggs",
  ".git",
  "build",
  "docs"
]

[tool.ruff.format]
line-ending = "auto"

[tool.ruff.lint]
extend-select = [
  "RUF022" # unsorted-dunder-all
]
ignore = [
  "BLE001", # blind-except
  "COM", # commas
  "D100", # undocumented-public-module
  "D101", # undocumented-public-class
  "D102", # undocumented-public-method
  "D103", # undocumented-public-function
  "D104", # undocumented-public-package
  "D205", # blank-line-after-summary
  "D400", # ends-in-period
  "D401", # non-imperative-mood
  "G004", # logging-fstring-interpolation
  "PERF203", # try-except-in-loop
  "S110", # try-except-pass
  "S112", # try-except-continue
]
preview = true
select = [
  "BLE", # blind-except
  "C90", # mccabe-complexity
  "D", # docstrings
  "E", # pycodestyle errors
  "FLY002", # static-join-to-fstring
  "G", # logging-format
  "N", # naming conventions
  "PERF", # iterator performance
  "PTH", # pathlib
  "RUF010", # explicit-f-string-type-conversion
  "RUF013", # implicit-optional
  "S", # bandit
  "UP", # python version conventions
  "W" # pycodestyle warnings
]

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.per-file-ignores]
"docs/**" = ["E402"]
"src/rook/**/__init__.py" = ["F401", "F403"]
"tests/**" = ["D100", "D101", "D102", "D103", "S101"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 180

[tool.ruff.lint.pydocstyle]
convention = "numpy"
